{"version":3,"sources":["components/Button.jsx","api/index.js","pages/CitiesPage.jsx","redux/myCitiesReducer/action.js","components/CurrentWeather.jsx","components/Header.jsx","components/CardBlock.jsx","components/SearchBlock.jsx","redux/weatherReducer/action.js","pages/HomePage.jsx","components/DayForecastCard.jsx","pages/ForecastPage.jsx","App.js","redux/myCitiesReducer/myCitiesReducer.js","redux/weatherReducer/weatherReducer.js","redux/store.js","index.js"],"names":["Button","children","className","API_URL","API_KEY","API_IMG","CitiesPage","dispatch","useDispatch","cities","useSelector","state","myCities","onRefreshItem","value","axios","get","then","data","type","payload","refreshItem","refreshDataCurrentCity","to","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","length","map","item","src","weather","icon","alt","Math","floor","main","temp","wind","speed","humidity","pressure","SyncOutlined","onClick","DeleteOutlined","window","confirm","removeCity","id","CurrentWeather","weatherInfo","name","location","reload","moment","format","Date","sys","sunrise","toLocaleTimeString","sunset","Header","process","CardBlock","onClickAddCity","x","y","rx","SearchBlock","searchValue","setSearchValue","placeholder","onChange","e","target","setWeather","setDailyForecast","forecast","HomePage","useState","currentWeather","setCurrentWeather","debouncedValue","setDebouncedValue","weatherData","obj","debounce","useCallback","func","delay","clearTimeout","t","setTimeout","useEffect","fetchData","a","Promise","resolve","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","error","fetchWeather","Dimmer","active","Loader","LoadingOutlined","DayForecastCard","items","dateTimeString","unix","dt","description","max","ForecastPage","lat","coord","lon","dailyForecast","daily","log","getDailyForecast","feels_like","temp_max","temp_min","index","App","path","exact","initialState","myCitiesReducer","action","newCity","filter","indexOf","concat","weatherReducer","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","persistConfig","key","storage","rootReducer","combineReducers","persistedReducer","persistReducer","store","createStore","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.1b8167e0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Button({ children }) {\r\n  return <div className=\"button\">{children}</div>;\r\n}\r\n\r\nexport default Button;\r\n","export const API_URL = 'https://api.openweathermap.org/data/2.5';\r\nexport const API_KEY = 'd94508bcd32dc95507d3e4d99567fc60';\r\nexport const API_IMG = 'http://openweathermap.org/img/wn';\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteOutlined, SyncOutlined } from '@ant-design/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Button from '../components/Button';\r\nimport { API_IMG } from '../api';\r\nimport { refreshDataCurrentCity, removeCity } from '../redux/myCitiesReducer/action';\r\n\r\nfunction CitiesPage() {\r\n  const dispatch = useDispatch();\r\n  const cities = useSelector((state) => state.cities.myCities);\r\n\r\n  const onRemoveItem = (value) => {\r\n    if (window.confirm('Are you sure you want to delete the city?')) {\r\n      dispatch(removeCity(value));\r\n    }\r\n  };\r\n\r\n  const onRefreshItem = (value) => {\r\n    dispatch(refreshDataCurrentCity(value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"cities-page\">\r\n        <Link to=\"/home\">\r\n          <Button>\r\n            <span>BACK TO HOMEPAGE</span>\r\n            <svg\r\n              width=\"16\"\r\n              height=\"14\"\r\n              viewBox=\"0 0 16 14\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path\r\n                d=\"M1 7H14.7143\"\r\n                stroke=\"#000\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n              <path\r\n                d=\"M8.71436 1L14.7144 7L8.71436 13\"\r\n                stroke=\"#000\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n            </svg>\r\n          </Button>\r\n        </Link>\r\n        {cities && cities.length !== 0 ? (\r\n          cities.map((item) => (\r\n            <div key={item.weather?.id} className=\"card\">\r\n              <div className=\"card-block\">\r\n                <div className=\"card-block__flex\">\r\n                  <h3>{item?.value}</h3>\r\n                  <img src={`${API_IMG}/${item.weather.weather[0].icon}.png`} alt=\"icon\" />\r\n                  <p>{Math.floor(item.weather?.main?.temp)}&deg;C</p>\r\n                  <div className=\"card-block__info\">\r\n                    <span>{item.weather?.wind?.speed} m/s</span>\r\n                    <span>{item.weather?.main?.humidity}%</span>\r\n                    <span>{item.weather?.main?.pressure} mm Hg</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <SyncOutlined className=\"refresh\" onClick={() => onRefreshItem(item.value)} />\r\n              <DeleteOutlined onClick={() => onRemoveItem(item.value)} />\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"empty\">\r\n            <p>\r\n              Oops!\r\n              <br /> You don't have any saved cities yet.\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CitiesPage;\r\n","import axios from 'axios';\r\nimport { API_URL, API_KEY } from '../../api';\r\n\r\nexport const addCity = (city) => ({\r\n  type: 'ADD_MY_CITY',\r\n  payload: city,\r\n});\r\n\r\nexport const removeCity = (value) => ({\r\n  type: 'REMOVE_CITY',\r\n  payload: value,\r\n});\r\n\r\nexport const refreshItem = (data) => ({\r\n  type: 'REFRESH_DATA',\r\n  payload: data,\r\n});\r\n\r\nexport const refreshDataCurrentCity = (value) => (dispatch) => {\r\n  axios.get(`${API_URL}/weather/?q=${value}&units=metric&appid=${API_KEY}`).then(({ data }) => {\r\n    dispatch(refreshItem(data));\r\n  });\r\n};\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\n\r\nfunction CurrentWeather({ weatherInfo }) {\r\n  const refresh = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"current-town\">\r\n      <div className=\"current-town__top\">\r\n        <p className=\"name\">\r\n          <span>Your city: </span>\r\n          <strong>{weatherInfo.name}</strong>\r\n        </p>\r\n        <SyncOutlined onClick={refresh} className=\"refresh\" />\r\n      </div>\r\n      <div className=\"current-town__flex\">\r\n        <p className=\"day\">\r\n          {moment().format('dddd')}, <span>{moment().format('LL')}</span>\r\n        </p>\r\n        <p className=\"description\">{weatherInfo.weather[0].main}</p>\r\n      </div>\r\n\r\n      <div className=\"current-town__flex\">\r\n        <p className=\"temp\">Temprature: {Math.floor(weatherInfo.main.temp)} &deg;C</p>\r\n        <p className=\"temp\">Humidity: {weatherInfo.main.humidity} %</p>\r\n      </div>\r\n\r\n      <div className=\"current-town__flex\">\r\n        <p className=\"sunrise-sunset\">\r\n          Sunrise: {new Date(weatherInfo.sys.sunrise * 1000).toLocaleTimeString('en-IN')}\r\n        </p>\r\n        <p className=\"sunrise-sunset\">\r\n          Sunset: {new Date(weatherInfo.sys.sunset * 1000).toLocaleTimeString('en-IN')}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentWeather;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"logo\">\r\n        <img width={70} height={50} src={process.env.PUBLIC_URL + '/assets/murky.png'} alt=\"logo\" />\r\n        <p>\r\n          The best\r\n          <br /> weather forecast\r\n        </p>\r\n      </div>\r\n      <div className=\"my_cities\">\r\n        <Link to=\"/cities\">\r\n          <span>My cities</span>\r\n          <img width={30} height={30} src={process.env.PUBLIC_URL + '/assets/sun.png'} alt=\"sun\" />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_IMG } from '../api';\r\n\r\nimport Button from './Button';\r\n\r\nfunction CardBlock({ item, onClickAddCity }) {\r\n  const onAddCity = () => {\r\n    onClickAddCity(item);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-block\">\r\n        <div className=\"card-block__flex\">\r\n          <h3>{item.value}</h3>\r\n          <img src={`${API_IMG}/${item.weather.weather[0].icon}.png`} alt=\"icon\" />\r\n          <p>{Math.floor(item.weather.main?.temp)}&deg;C</p>\r\n          <div className=\"card-block__info\">\r\n            <span>{item.weather.wind?.speed} m/s</span>\r\n            <span>{item.weather.main?.humidity} %</span>\r\n            <span>{item.weather.main?.pressure} mm Hg</span>\r\n          </div>\r\n        </div>\r\n        <Link to=\"/forecast\">\r\n          <Button>\r\n            <span>SHOW FORECAST</span>\r\n            <svg\r\n              width=\"16\"\r\n              height=\"14\"\r\n              viewBox=\"0 0 16 14\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path\r\n                d=\"M1 7H14.7143\"\r\n                stroke=\"#000\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n              <path\r\n                d=\"M8.71436 1L14.7144 7L8.71436 13\"\r\n                stroke=\"#000\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n            </svg>\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n      <svg\r\n        onClick={onAddCity}\r\n        width=\"40\"\r\n        height=\"40\"\r\n        viewBox=\"0 0 32 32\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\">\r\n        <rect x=\"0.5\" y=\"0.5\" width=\"31\" height=\"31\" rx=\"7.5\" fill=\"white\" stroke=\"#b2b2b2\" />\r\n        <path\r\n          d=\"M20.6653 15.1312H17.2021V11.6682C17.2021 10.3328 15.1311 10.3328 15.1311 11.6682V15.1312H11.668C10.3329 15.1312 10.3329 17.2022 11.668 17.2022H15.1311V20.6652C15.1311 22.0005 17.2021 22.0005 17.2021 20.6652V17.2022H20.6653C22.0005 17.2022 22.0005 15.1312 20.6653 15.1312Z\"\r\n          fill=\"#000\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardBlock;\r\n","import React from 'react';\r\n\r\nfunction SearchBlock({ searchValue, setSearchValue }) {\r\n  const onChangeSearchInput = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <svg\r\n        width=\"16\"\r\n        height=\"16\"\r\n        viewBox=\"0 0 16 16\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path\r\n          d=\"M15.25 15.25L11.8855 11.8795L15.25 15.25ZM13.75 7.375C13.75 9.06576 13.0784 10.6873 11.8828 11.8828C10.6873 13.0784 9.06576 13.75 7.375 13.75C5.68424 13.75 4.06274 13.0784 2.86719 11.8828C1.67165 10.6873 1 9.06576 1 7.375C1 5.68424 1.67165 4.06274 2.86719 2.86719C4.06274 1.67165 5.68424 1 7.375 1C9.06576 1 10.6873 1.67165 11.8828 2.86719C13.0784 4.06274 13.75 5.68424 13.75 7.375V7.375Z\"\r\n          stroke=\"#ffffff\"\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n        />\r\n      </svg>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter the city\"\r\n        value={searchValue}\r\n        onChange={onChangeSearchInput}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBlock;\r\n","import axios from 'axios';\r\nimport { API_URL, API_KEY } from '../../api';\r\n\r\nexport const setCity = (city) => ({\r\n  type: 'SET_CITY',\r\n  payload: city,\r\n});\r\n\r\nexport const fetchWeather = (searchValue) => (dispatch) => {\r\n  try {\r\n    axios\r\n      .get(`${API_URL}/weather/?q=${searchValue}&units=metric&appid=${API_KEY}`)\r\n      .then(({ data }) => {\r\n        dispatch(setWeather(data));\r\n        dispatch(setCity(data.name));\r\n      });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const getDailyForecast = (lat, lon) => (dispatch) => {\r\n  try {\r\n    axios\r\n      .get(`${API_URL}/onecall?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`)\r\n      .then(({ data }) => {\r\n        dispatch(setDailyForecast(data));\r\n      });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const setWeather = (weather) => ({\r\n  type: 'SET_WEATHER',\r\n  payload: weather,\r\n});\r\n\r\nexport const setDailyForecast = (forecast) => ({\r\n  type: 'SET_DAILY_FORECAST',\r\n  payload: forecast,\r\n});\r\n","import axios from 'axios';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport { API_KEY, API_URL } from '../api';\r\nimport CurrentWeather from '../components/CurrentWeather';\r\nimport Header from '../components/Header';\r\nimport CardBlock from '../components/CardBlock';\r\nimport SearchBlock from '../components/SearchBlock';\r\nimport { fetchWeather } from '../redux/weatherReducer/action';\r\n\r\nfunction HomePage() {\r\n  const [currentWeather, setCurrentWeather] = useState([]);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [debouncedValue, setDebouncedValue] = useState('');\r\n\r\n  const { weatherData } = useSelector((obj) => obj);\r\n  const dispatch = useDispatch();\r\n\r\n  const geolocation = () => {\r\n    return new Promise((resolve) => {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        resolve(position.coords);\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleAddMyCity = (obj) => {\r\n    dispatch({\r\n      type: 'ADD_MY_CITY',\r\n      payload: obj,\r\n    });\r\n  };\r\n\r\n  const debounce = useCallback(\r\n    (func, delay) => {\r\n      clearTimeout(debouncedValue);\r\n      const t = setTimeout(func, delay);\r\n      setDebouncedValue(t);\r\n    },\r\n    [debouncedValue],\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { latitude, longitude } = await geolocation();\r\n        const { data } = await axios.get(\r\n          `${API_URL}/weather/?lat=${latitude}&lon=${longitude}&units=metric&APPID=${API_KEY}`,\r\n        );\r\n        setCurrentWeather(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchData();\r\n\r\n    debounce(() => {\r\n      if (!searchValue) return;\r\n      dispatch(fetchWeather(searchValue));\r\n    }, 1000);\r\n  }, [dispatch, searchValue]);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Header />\r\n      {typeof currentWeather.main != 'undefined' ? (\r\n        <CurrentWeather weatherInfo={currentWeather} />\r\n      ) : (\r\n        <div className=\"loading\">\r\n          <Dimmer active>\r\n            <Loader>\r\n              Loading..\r\n              <LoadingOutlined />\r\n            </Loader>\r\n          </Dimmer>\r\n        </div>\r\n      )}\r\n      <SearchBlock searchValue={searchValue} setSearchValue={setSearchValue} />\r\n      {typeof weatherData.value !== 'undefined' && searchValue !== '' ? (\r\n        <CardBlock item={weatherData} onClickAddCity={handleAddMyCity} />\r\n      ) : (\r\n        ''\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import moment from 'moment';\r\nimport React from 'react';\r\nimport { API_IMG } from '../api';\r\n\r\nfunction DayForecastCard({ items }) {\r\n  const dateTimeString = moment.unix(items.dt).format('dddd');\r\n\r\n  return (\r\n    <div className=\"dayForecast-block\">\r\n      <h3>{dateTimeString}</h3>\r\n      <img src={`${API_IMG}/${items.weather[0].icon}.png`} alt=\"icon\" />\r\n      <span>{items.weather.description}</span>\r\n      <span>{Math.floor(items.temp.max)}&deg;C</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DayForecastCard;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { API_IMG } from '../api';\r\nimport Button from '../components/Button';\r\nimport DayForecastCard from '../components/DayForecastCard';\r\nimport { getDailyForecast } from '../redux/weatherReducer/action';\r\n\r\nfunction ForecastPage() {\r\n  const dispatch = useDispatch();\r\n  const { weatherData } = useSelector((weather) => weather);\r\n  const lat = weatherData.weather.coord.lat;\r\n  const lon = weatherData.weather.coord.lon;\r\n  const dailyForecast = weatherData.forecast.daily;\r\n\r\n  console.log(weatherData);\r\n  useEffect(() => {\r\n    if (!weatherData) return;\r\n    dispatch(getDailyForecast(lat, lon));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"forecast\">\r\n        <Link to=\"/home\">\r\n          <Button>\r\n            <span>BACK TO HOMEPAGE</span>\r\n            <svg\r\n              width=\"16\"\r\n              height=\"14\"\r\n              viewBox=\"0 0 16 14\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path\r\n                d=\"M1 7H14.7143\"\r\n                stroke=\"#000\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n              <path\r\n                d=\"M8.71436 1L14.7144 7L8.71436 13\"\r\n                stroke=\"#000\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n            </svg>\r\n          </Button>\r\n        </Link>\r\n        <h2>{weatherData.value}</h2>\r\n        <div className=\"forecast__data\">\r\n          <img\r\n            width={70}\r\n            height={70}\r\n            src={`${API_IMG}/${weatherData.weather.weather[0].icon}.png`}\r\n            alt=\"icon\"\r\n          />\r\n          <p className=\"temp\">{Math.floor(weatherData.weather.main?.temp)}&deg;C</p>\r\n          <div>\r\n            <b>Feels like:</b>\r\n            <span>{Math.floor(weatherData.weather.main?.feels_like)}&deg;C</span>\r\n          </div>\r\n          <div>\r\n            <b>Max temperature:</b>\r\n            <span>{Math.floor(weatherData.weather.main?.temp_max)}&deg;C</span>\r\n          </div>\r\n          <div>\r\n            <b>Min temperature:</b>\r\n            <span>{Math.floor(weatherData.weather.main?.temp_min)}&deg;C</span>\r\n          </div>\r\n          <div>\r\n            <b>Sunrise:</b>\r\n            <span>\r\n              {new Date(weatherData.weather.sys?.sunrise * 1000).toLocaleTimeString('en-US')}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <b>Sunset:</b>\r\n            <span>\r\n              {new Date(weatherData.weather.sys?.sunset * 1000).toLocaleTimeString('en-US')}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <b>Wind speed:</b>\r\n            <span>{weatherData.weather.wind?.speed}m/s</span>\r\n          </div>\r\n          <div>\r\n            <b>Humidity:</b>\r\n            <span>{weatherData.weather.main?.humidity} %</span>\r\n          </div>\r\n          <div>\r\n            <b>Pressure:</b>\r\n            <span>{weatherData.weather.main?.pressure} mm Hg</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"dayForecast\">\r\n          <h2>7 days forecast</h2>\r\n          <div className=\"dayForecast__wrapper\">\r\n            {dailyForecast?.map((items, index) => (\r\n              <DayForecastCard key={index} items={items} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForecastPage;\r\n","import { Redirect, Route, Switch } from 'react-router';\nimport CitiesPage from './pages/CitiesPage';\nimport HomePage from './pages/HomePage';\nimport ForecastPage from './pages/ForecastPage';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/home\" exact>\n        <HomePage />\n      </Route>\n      <Route path=\"/cities\" exact>\n        <CitiesPage />\n      </Route>\n      <Route path=\"/forecast\" exact>\n        <ForecastPage />\n      </Route>\n      <Redirect to=\"/home\" />\n    </Switch>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n  myCities: [],\r\n};\r\n\r\nconst myCitiesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_MY_CITY':\r\n      const newCity = state.myCities.filter(\r\n        (item, index) => index === state.myCities.indexOf(item),\r\n      );\r\n      return {\r\n        ...state,\r\n        myCities: [action.payload].concat(newCity),\r\n      };\r\n    case 'REMOVE_CITY':\r\n      return {\r\n        ...state,\r\n        myCities: state.myCities.filter((item) => item.value !== action.payload),\r\n      };\r\n    case 'GET_CITIES':\r\n      return {\r\n        ...state,\r\n        myCities: action.payload,\r\n      };\r\n    case 'REFRESH_DATA':\r\n      return {\r\n        ...state,\r\n        myCities: state.myCities.map((item) =>\r\n          item.value === action.payload.value ? action.payload : item,\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myCitiesReducer;\r\n","const initialState = {\r\n  weather: [],\r\n};\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_WEATHER':\r\n      return {\r\n        ...state,\r\n        weather: action.payload,\r\n      };\r\n    case 'SET_CITY':\r\n      return {\r\n        ...state,\r\n        value: action.payload,\r\n      };\r\n    case 'SET_CURRENT_LOCATION_FORECAST':\r\n      return {\r\n        ...state,\r\n        weather: action.payload,\r\n      };\r\n    case 'SET_DAILY_FORECAST':\r\n      return {\r\n        ...state,\r\n        forecast: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default weatherReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\n\r\nimport myCitiesReducer from './myCitiesReducer/myCitiesReducer';\r\nimport weatherReducer from './weatherReducer/weatherReducer';\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware));\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\nconst rootReducer = combineReducers({\r\n  cities: myCitiesReducer,\r\n  weatherData: weatherReducer,\r\n});\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer, composedEnhancer);\r\nconst f = () => {\r\n  let store = createStore(persistedReducer, composedEnhancer);\r\n  let persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n\r\nexport default f;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.scss';\nimport App from './App';\nimport persistStore from './redux/store';\n\nconst { store, persistor } = persistStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}